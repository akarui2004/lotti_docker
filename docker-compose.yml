version: '3.8'

networks:
  lotti:
    driver: ${APP_NETWORK_DRIVER}
volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}

services:
  app:
    platform: ${BUILD_PLATFORM}
    container_name: ${APP_CONTAINER_NAME}
    build:
      context: ./app
      args:
        - WORK_DIR=${APP_CODE_PATH_CONTAINER}
        - PHP_VERSION=${PHP_VERSION}
        - COMPOSER_INSTALL=${COMPOSER_INSTALL}
        - COMPOSER_LARAVEL_VAPOR=${COMPOSER_LARAVEL_VAPOR}
        - NVM_INSTALL=${NVM_INSTALL}
        - YARN_INSTALL=${YARN_INSTALL}
        - NODE_VERSION=${NODE_VERSION}
        - INSTALL_NODE=${INSTALL_NODE}
        - ADD_GROUP=${ADD_GROUP}
        - GROUP_ID=${GROUP_ID}
        - GROUP_NAME=${GROUP_NAME}
        - USER_NAME=${USER_NAME}
        - http_proxy
        - https_proxy
        - no_proxy
    tty: true
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${APP_CRON_LOG_FILE}:/var/log/cron.log
      - ${PHP_INI_FILE_CONFIG}:/etc/php/${PHP_VERSION}/cli/php.ini
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    depends_on:
      - mysql
      - redis
    networks:
      - lotti
  mysql:
    platform: ${BUILD_PLATFORM}
    container_name: ${MYSQL_CONTAINER_NAME}
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${APP_TIMEZONE}
    volumes:
      - ${MYSQL_DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - lotti
  redis:
    platform: ${BUILD_PLATFORM}
    container_name: ${REDIS_CONTAINER_NAME}
    build: ./redis
    volumes:
      - ${REDIS_DATA_PATH_HOST}/redis:/data
    command: --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - lotti
  # localstack:
  #   image: localstack/localstack:latest
  #   platform: ${BUILD_PLATFORM}
  #   container_name: ${LOCALSTACK_CONTAINER_NAME}
  #   ports:
  #     - '4566:4566'
  #     - '9000:9000'
  #   environment:
  #     - SERVICES=${LOCALSTACK_SERVICES}
  #     - DEBUG=${LOCALSTACK_ENABLE_DEBUG}
  #     - PORT_WEB_UI=${LOCALSTACK_WEB_PORT}
  #     - START_WEB=1
  #     - DATA_DIR=${LOCALSTACK_DATA_DIR}
  #     - DEFAULT_REGION=${S3_REGION}
  #     - AWS_ACCESS_KEY_ID=${S3_ACCESS_KEY}
  #     - AWS_SECRET_ACCESS_KEY=${S3_SECRET_KEY}
  #   volumes:
  #     - ${S3_DATA_PATH_HOST}:/tmp/localstack
  #     - ${S3_BASH_SCRIPT}:/docker-entrypoint-initaws.d/create-resources.sh
  #   networks:
  #     - lotti